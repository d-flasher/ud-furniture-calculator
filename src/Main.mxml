<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="700" height="600"
					   initialize="windowedapplication_initializeHandler(event)">
	<fx:Script>
		<![CDATA[

		import data.DoorMaterialData;
		import flash.events.Event;
		import flash.events.MouseEvent;
		import mx.collections.ArrayCollection;
		import mx.events.FlexEvent;
		import mx.events.ResizeEvent;
		import spark.components.Button;
		import spark.components.DropDownList;
		import spark.components.FormItem;
		import spark.components.NumericStepper;
		import spark.layouts.HorizontalLayout;
		import spark.layouts.supportClasses.LayoutBase;
		import spark.layouts.VerticalLayout;
		import view.DoorFormItem;

		private const BASE_MATERIAL_PRICE:Number = 0.12; // копус (см2)
		private const DOOR_CARCASS_PRICE:Number = 4800; // корпус двери (шт)

		private const RACK_PRICE:Number = 1028; // стойка (шт)
		private const SHELF_PRICE:Number = 430; // полка (шт)
		private const DRAWER_PRICE:Number = 948; // ящик (шт)

		private const ANGULAR_SECTOR_PRICE:Number = 2200; // угловой сектор (шт)
		private const CLOTHES_RAIL_PRICE:Number = 350; // штанга для одежды (шт)

		private const BACKLIGHT_PRICE:Number = 320; // подсветка (шт)
		private const PONTOGRAF_PRICE:Number = 2500; // понтограф (шт)
		private const BASKET_PRICE:Number = 700; // корзина для белья (шт)
		private const HANGER_TROUSERS_PRICE:Number = 1240; // вешалка для брюк (шт)
		private const HANGER_NECKTIES_PRICE:Number = 1150; // вешалка для галстуков (шт)
		private const SHELF_SHOES_PRICE:Number = 1209; // полка сетчатая для обуви (шт)
		private const SOFT_DOOR_CLOSER_PRICE:Number = 700; // мягкий доводчик двери (шт)
		private const SOFT_DRAWER_CLOSER_PRICE:Number = 500; // мягкий доводчик ящиков (шт)

		public static const DOOR_MATERIALS:ArrayCollection = new ArrayCollection([
			new DoorMaterialData("--", 0),
			new DoorMaterialData("ЛДСП", 0.07 /*(см2)*/),
			new DoorMaterialData("Зеркало", 0.09 /*(см2)*/),
			new DoorMaterialData("Зеркало цветное", 0.10 /*(см2)*/),
			new DoorMaterialData("Зеркало с узором (пескоструй)", 0.24 /*(см2)*/),
			new DoorMaterialData("Стекло с пленкой", 0.18 /*(см2)*/),
			new DoorMaterialData("Стекло с фотовитражем", 0.26 /*(см2)*/)
		]);

		private function calculate():void
		{
			// base
			var baseArea:Number = 2 * (baseWidthNStepper.value * baseDepthNStepper.value) + 2 * (baseHeightNStepper.value * baseDepthNStepper.value);
			var basePrice:Number = baseArea * BASE_MATERIAL_PRICE;

			// doors
			var doorsTotalPrice:Number = 0;
			if (_doorsElements.length > 0)
			{
				var oneDoorArea:Number = (baseWidthNStepper.value / _doorsElements.length) * baseHeightNStepper.value;

				for (var i:int = 0; i < _doorsElements.length; i++)
				{
					doorsTotalPrice += DOOR_CARCASS_PRICE;

					var doorItem:DoorFormItem = _doorsElements[i];
					var doorTypeData:DoorMaterialData = doorItem.selectedDoorType;
					if (doorTypeData != null)
					{
						doorsTotalPrice += oneDoorArea * doorTypeData.price;
					}
				}
			}

			// --

			// стойка
			var rackPrice:Number = rackNStepper.value * RACK_PRICE;

			// полка
			var shelfPrice:Number = shelfNStepper.value * SHELF_PRICE;

			// ящик
			var drawerPrice:Number = drawerNStepper.value * DRAWER_PRICE;

			// --

			// угловой сектор
			var angularSectorPrice:Number = angularSectorNStepper.value * ANGULAR_SECTOR_PRICE;

			// штанга для одежды
			var clothesRailPrice:Number = clothesRailNStepper.value * CLOTHES_RAIL_PRICE;

			// --

			// подсветка
			var backlightPrice:Number = backlightCheckbox.value * BACKLIGHT_PRICE;

			// понтограф
			var pontografPrice:Number = pontografNStepper.value * PONTOGRAF_PRICE;

			// корзина для белья
			var basketPrice:Number = basketNStepper.value * BASKET_PRICE;

			// вешалка для брюк
			var hangerTrousersPrice:Number = hangerTrousersNStepper.value * HANGER_TROUSERS_PRICE;

			// вешалка для галстуков
			var hangerNecktiesPrice:Number = hangerNecktiesNStepper.value * HANGER_NECKTIES_PRICE;

			// полка сетчатая для обуви
			var shelfShoesPrice:Number = shelfShoesNStepper.value * SHELF_SHOES_PRICE;

			// мягкий доводчик двери
			var softDoorCloserPrice:Number = softDoorCloserNStepper.value * SOFT_DOOR_CLOSER_PRICE;

			// мягкий доводчик ящиков
			var softDrawerCloserPrice:Number = softDrawerCloserNStepper.value * SOFT_DRAWER_CLOSER_PRICE;

			var resultPrice:Number = basePrice
				+ doorsTotalPrice

				+ rackPrice
				+ shelfPrice
				+ drawerPrice

				+ angularSectorPrice
				+ clothesRailPrice

				+ backlightPrice
				+ pontografPrice
				+ basketPrice
				+ hangerTrousersPrice
				+ hangerNecktiesPrice
				+ shelfShoesPrice
				+ softDoorCloserPrice
				+ softDrawerCloserPrice;

			totalPriceLabel.text = 'Результат: ' + String(Math.round(resultPrice)) + ' руб.';
		}

		private function controlValueComit(event:FlexEvent):void
		{
			calculate();
		}

		private function onDoorItemValueCommit(event:FlexEvent):void
		{
			calculate();
		}

		private var _doorsElements:Vector.<DoorFormItem> = new Vector.<DoorFormItem>();
		private function doorsNStepperChanged(event:FlexEvent):void
		{
			var i:int;
			var doorFormItem:DoorFormItem;

			for (i = 0; i < _doorsElements.length; i++)
			{
				_doorsElements[i].removeEventListener(FlexEvent.VALUE_COMMIT, onDoorItemValueCommit);
				baseForm.removeElement(_doorsElements[i]);
			}
			_doorsElements.length = 0;

			var startIndex:int = baseForm.getElementIndex(doorsHeading);
			for (i = 0; i < doorsNStepper.value; i++)
			{
				doorFormItem = new DoorFormItem();
				doorFormItem.label = "Дверь " + (i + 1);
				doorFormItem.percentWidth = 100;
				doorFormItem.addEventListener(FlexEvent.VALUE_COMMIT, onDoorItemValueCommit);
				_doorsElements.push(doorFormItem);

				baseForm.addElementAt(doorFormItem, ++startIndex);
			}

			calculate();
		}

		private function baseFormCreationComplete(event:FlexEvent):void
		{
			//for (var i:int = 0; i < baseForm.numElements; i++)
			//{
				//if (baseForm.getElementAt(i) is NumericStepper)
				//{
					//(baseForm.getElementAt(i) as NumericStepper).mouseChildren = false;
				//}
			//}
		}

		//-----------------------------------------------------------------------------------------------------------------------
		//
		//-----------------------------------------------------------------------------------------------------------------------

		private const APP_TITLE:String = "Калькулятор мебели";

		protected function windowedapplication_initializeHandler(event:FlexEvent):void
		{
			this.title = APP_TITLE;

			calculate();
		}

		]]>
	</fx:Script>

	<fx:Style>
		@namespace "library://ns.adobe.com/flex/spark";

		.blueTheme {
			font-size: 20;
			font-weight: bold;
		}
	</fx:Style>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<s:Panel id="mainPanel" width="100%" height="100%" title="{APP_TITLE}">

		<s:Scroller width="100%" height="100%">
			<s:Group>
				<s:Form id="baseForm" width="100%" contentCreationComplete="baseFormCreationComplete(event)">

					<s:FormItem id="baseWidthFItem" label="Длина шкафа общая, см*:">
						<s:NumericStepper id="baseWidthNStepper" minimum="0" maximum="100000" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem id="baseHeightFItem" label="Высотка шкафа, см*:">
						<s:NumericStepper id="baseHeightNStepper" minimum="0" maximum="100000" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem id="baseDepthFItem" label="Глубина шкафа, см*:">
						<s:NumericStepper id="baseDepthNStepper" minimum="0" maximum="100000" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<mx:HRule width="100%"/>

					<s:FormHeading label="Двери"/>

					<s:FormItem label="Количество дверей">
						<s:NumericStepper id="doorsNStepper" minimum="0" maximum="10" valueCommit="doorsNStepperChanged(event)"/>
					</s:FormItem>

					<s:FormItem label="Профиль">
						<s:DropDownList width="100%" requireSelection="true">
							<s:dataProvider>
								<mx:ArrayCollection>
									<fx:Object label="Раздвижные (купе)" />
									<fx:Object label="Распашные" />
								</mx:ArrayCollection>
							</s:dataProvider>
						</s:DropDownList>
					</s:FormItem>

					<s:FormHeading id="doorsHeading" label="Наполнение дверей"/>

					<mx:HRule width="100%"/>

					<s:FormItem id="rackFItem" label="Количество вертикальных стоек, шт.">
						<s:NumericStepper id="rackNStepper" minimum="0" maximum="60" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem id="shelfFItem" label="Количество полок, шт.">
						<s:NumericStepper id="shelfNStepper" minimum="0" maximum="40" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem id="drawefFItem" label="Количество ящиков, шт.">
						<s:NumericStepper id="drawerNStepper" minimum="0" maximum="40" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<mx:HRule width="100%"/>

					<s:FormItem label="Угловой сектор">
						<s:NumericStepper id="angularSectorNStepper" minimum="0" maximum="10" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem label="Штанга для одежды">
						<s:NumericStepper id="clothesRailNStepper" minimum="0" maximum="10" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<mx:HRule width="100%"/>

					<s:FormHeading label="Какие из следующих аксессуаров и приятных мелочей включить в рассчет?:"/>
					<s:FormItem label="Подсветка">
						<s:NumericStepper id="backlightCheckbox" minimum="0" maximum="10" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem label="Подъемная штанга (понтограф)">
						<s:NumericStepper id="pontografNStepper" minimum="0" maximum="10" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem label="Корзина для белья">
						<s:NumericStepper id="basketNStepper" minimum="0" maximum="10" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem label="Вешалка для брюк">
						<s:NumericStepper id="hangerTrousersNStepper" minimum="0" maximum="10" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem label="Вешалка для галстуков">
						<s:NumericStepper id="hangerNecktiesNStepper" minimum="0" maximum="10" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem label="Полка сетчатая для обуви">
						<s:NumericStepper id="shelfShoesNStepper" minimum="0" maximum="10" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem label="Двери мягкого закрывания (доводчик)">
						<s:NumericStepper id="softDoorCloserNStepper" minimum="0" maximum="10" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<s:FormItem label="Ящики мягкого закрывания (доводчик)">
						<s:NumericStepper id="softDrawerCloserNStepper" minimum="0" maximum="10" valueCommit="controlValueComit(event)"/>
					</s:FormItem>

					<mx:HRule width="100%"/>

				</s:Form>
			</s:Group>
		</s:Scroller>

		<s:controlBarContent>
			<s:HGroup width="100%">
				<mx:Spacer width="100%"/>
				<s:Label id="totalPriceLabel" styleName="blueTheme" />
			</s:HGroup>
		</s:controlBarContent>
	</s:Panel>

</s:WindowedApplication>